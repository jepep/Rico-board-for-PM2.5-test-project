static ssize_t
oeld_write(struct file *filp, const char __user *buf
                size_t count, loff_t *f_pos)
{
        struct oeld_data        *oeld;
        ssize_t                        status = 0;
        unsigned long                missing;
        struct ss1306_data *pss1306_data;

//        printk("=1=oeld_write count=%d, bufsiz=%d\n", count, bufsiz);

        /* chipselect only toggles at start or end of operation */
        if (count > bufsiz)
                return -EMSGSIZE;
//        printk("=2=oeld_write count=%d, bufsiz=%d\n", count, bufsiz);

        oeld = filp->private_data;

        mutex_lock(&oeld->buf_lock);
        missing = copy_from_user(oeld->buffer, buf, count);
        if (missing == 0) {
        #if 0
                status = oeld_sync_write(oeld, count);
        #else
        //        printk("=211=oeld_write count=%d, bufsiz=%d\n", count, bufsiz);
                pss1306_data = (struct ss1306_data *)oeld->buffer;
                status = ssd1306_showString(oeld->spi, pss1306_data);
        //        printk("=212=oeld_write count=%d, status=%d\n", count, status);
        #endif
        } else
        {
                        printk("=22=oeld_write count=%d, bufsiz=%d\n", count, bufsiz);
                status = -EFAULT;
        }
        mutex_unlock(&oeld->buf_lock);

        return status;
}
